{"version":3,"sources":["assets/icon.png","App.js","src/firebase/config.js","src/screens/CandidateListScreen/styles.js","src/components/ContactButton.js","src/screens/CandidateListScreen/CandidateListScreen.js","src/screens/LoginScreen/styles.js","src/screens/LoginScreen/LoginScreen.js","src/screens/HomeScreen/styles.js","src/screens/InfoScreen/styles.js","src/screens/InfoScreen/InfoScreen.js","src/screens/ProfileScreen/styles.js","src/screens/ProfileScreen/ProfileScreen.js","src/screens/RegistrationScreen/styles.js","src/screens/RegistrationScreen/RegistrationScreen.js","src/screens/WelcomeScreen/WelcomeScreen.js"],"names":["module","exports","global","btoa","encode","atob","decode","Stack","createStackNavigator","App","useState","loading","setLoading","user","setUser","useEffect","usersRef","firebase","firestore","collection","auth","onAuthStateChanged","doc","uid","get","then","document","userData","data","catch","error","Navigator","Screen","name","component","ProfileScreen","WelcomeScreen","LoginScreen","RegistrationScreen","CandidateListScreen","options","InfoScreen","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","StyleSheet","create","container","flex","alignItems","formContainer","flexDirection","height","marginTop","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","justifyContent","input","borderRadius","overflow","backgroundColor","marginRight","button","width","buttonText","color","fontSize","listContainer","padding","entityContainer","borderBottomColor","borderBottomWidth","entityText","ContactButton","props","Button","onPress","Linking","openURL","email","title","navigation","users","setUsers","userRef","snapshot","newUsers","forEach","fullName","id","push","console","log","View","style","styles","FlatList","renderItem","item","index","userContainer","key","Text","userText","navigate","keyExtractor","removeClippedSubviews","logo","alignSelf","margin","marginLeft","buttonTitle","fontWeight","footerView","footerText","footerLink","setEmail","password","setPassword","keyboardShouldPersistTaps","Image","source","require","TextInput","placeholder","placeholderTextColor","onChangeText","text","value","underlineColorAndroid","autoCapitalize","secureTextEntry","TouchableOpacity","signInWithEmailAndPassword","response","firestoreDocument","exists","alert","route","fields","setFields","candidateFieldRef","userId","params","docs","map","field","i","displayName","renderField","oldUser","setOldUser","fieldInfos","setFieldInfos","userID","currentUser","retrievedUser","newUser","set","setFullName","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword"],"mappings":"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","file":"static/js/app.38330a68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.21397a20.png\";","import 'react-native-gesture-handler';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { firebase } from './src/firebase/config'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { CandidateListScreen, LoginScreen, HomeScreen, ProfileScreen, RegistrationScreen, WelcomeScreen, InfoScreen } from './src/screens'\r\nimport {decode, encode} from 'base-64'\r\nif (!global.btoa) {  global.btoa = encode }\r\nif (!global.atob) { global.atob = decode }\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const usersRef = firebase.firestore().collection('users');\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        usersRef\r\n          .doc(user.uid)\r\n          .get()\r\n          .then((document) => {\r\n            const userData = document.data()\r\n            setLoading(false)\r\n            setUser(userData)\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false)\r\n          });\r\n      } else {\r\n        setLoading(false)\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        { user ? (\r\n          <Stack.Screen name=\"Profile\" component={ProfileScreen}/>\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Welcome\" component={WelcomeScreen} />\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Registration\" component={RegistrationScreen} />\r\n          </>\r\n        )}\r\n        <Stack.Screen name=\"CandidateList\" component={CandidateListScreen} options={{'title' : 'Candidates'}} />\r\n        <Stack.Screen name=\"Info\" component={InfoScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n","import firebase from 'firebase';\r\nimport '@firebase/auth';\r\nimport '@firebase/firestore';\r\n\r\nimport {API_KEY, MESSAGING_SENDER_ID} from '@env'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: API_KEY,\r\n  authDomain: 'engvalley.firebaseapp.com',\r\n  databaseURL: 'https://engvalley-default-rtdb.europe-west1.firebasedatabase.app/',\r\n  projectId: 'engvalley',\r\n  storageBucket: 'engvalley.appspot.com',\r\n  messagingSenderId: MESSAGING_SENDER_ID,\r\n  appId: 'test',\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport { firebase };\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center'\r\n    },\r\n    formContainer: {\r\n        flexDirection: 'row',\r\n        height: 80,\r\n        marginTop: 40,\r\n        marginBottom: 20,\r\n        flex: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        paddingLeft: 16,\r\n        flex: 1,\r\n        marginRight: 5\r\n    },\r\n    button: {\r\n        height: 47,\r\n        borderRadius: 5,\r\n        backgroundColor: '#788eec',\r\n        width: 80,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16\r\n    },\r\n    listContainer: {\r\n        marginTop: 20,\r\n        padding: 20,\r\n    },\r\n    entityContainer: {\r\n        marginTop: 16,\r\n        borderBottomColor: '#cccccc',\r\n        borderBottomWidth: 1,\r\n        paddingBottom: 16\r\n    },\r\n    entityText: {\r\n        fontSize: 20,\r\n        color: '#333333'\r\n    }\r\n})\r\n","import React from \"react\";\r\nimport { Button, Linking } from \"react-native\";\r\n\r\nexport default function ContactButton(props) {\r\n    return <Button onPress={() => Linking.openURL(\"mailto:\" + props.email)} title={props.title || \"Contact\"}/>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Button, FlatList, Keyboard, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\nimport { ContactButton } from '../../components';\r\n\r\nexport default function CandidateListScreen({props, navigation}) {\r\n    const [users, setUsers] = useState([])\r\n\r\n    const userRef = firebase.firestore().collection('users')\r\n\r\n    useEffect(() => {\r\n        userRef\r\n            .get()\r\n            .then(\r\n                snapshot => {\r\n                    const newUsers = []\r\n                    snapshot.forEach(doc => {\r\n                        const userData = doc.data()\r\n\r\n                        const user = {\r\n                            'fullName' : userData.fullName,\r\n                            'title' : userData.title,\r\n                            'id' : userData.id,\r\n                            'email' : userData.email\r\n                        }\r\n                        newUsers.push(user)\r\n                    });\r\n                    setUsers(newUsers)\r\n                    console.log('Found users: ', newUsers)\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const renderUser = ({item, index}) => {\r\n        return (\r\n            <View style={styles.userContainer} key={item.fullName}>\r\n                <Text style={styles.userText}>\r\n                    {item.fullName}, {item.title}\r\n                </Text>\r\n                <Button title=\"View info\" onPress={() => navigation.navigate(\"Info\", { 'userId' : item.id })} />\r\n                <ContactButton email={item.email}/>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            { users && (\r\n                <View style={styles.listContainer}>\r\n                    <FlatList\r\n                        data={users}\r\n                        renderItem={renderUser}\r\n                        keyExtractor={(item) => item.id}\r\n                        removeClippedSubviews={true}\r\n                    />\r\n                </View>\r\n            )}\r\n        </View>\r\n    )\r\n}\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#788eec',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize: 16,\r\n        color: '#2e2e2d'\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function LoginScreen({navigation}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onFooterLinkPress = () => {\r\n        navigation.navigate('Registration')\r\n    }\r\n\r\n    const onLoginPress = () => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const usersRef = firebase.firestore().collection('users')\r\n                usersRef\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then(firestoreDocument => {\r\n                        if (!firestoreDocument.exists) {\r\n                            alert(\"User does not exist anymore.\")\r\n                            return;\r\n                        }\r\n                        const user = firestoreDocument.data()\r\n                        navigation.navigate('Home', {user: user})\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <KeyboardAwareScrollView\r\n                style={{ flex: 1, width: '100%' }}\r\n                keyboardShouldPersistTaps=\"always\">\r\n                <Image\r\n                    style={styles.logo}\r\n                    source={require('../../../assets/icon.png')}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='E-mail'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    value={email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => onLoginPress()}>\r\n                    <Text style={styles.buttonTitle}>Log in</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.footerView}>\r\n                    <Text style={styles.footerText}>Don't have an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Sign up</Text></Text>\r\n                </View>\r\n            </KeyboardAwareScrollView>\r\n        </View>\r\n    )\r\n}\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center'\r\n    },\r\n    formContainer: {\r\n        flexDirection: 'row',\r\n        height: 80,\r\n        marginTop: 40,\r\n        marginBottom: 20,\r\n        flex: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        paddingLeft: 16,\r\n        flex: 1,\r\n        marginRight: 5\r\n    },\r\n    button: {\r\n        height: 47,\r\n        borderRadius: 5,\r\n        backgroundColor: '#788eec',\r\n        width: 80,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16\r\n    },\r\n    listContainer: {\r\n        marginTop: 20,\r\n        padding: 20,\r\n    },\r\n    entityContainer: {\r\n        marginTop: 16,\r\n        borderBottomColor: '#cccccc',\r\n        borderBottomWidth: 1,\r\n        paddingBottom: 16\r\n    },\r\n    entityText: {\r\n        fontSize: 20,\r\n        color: '#333333'\r\n    }\r\n})\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center'\r\n    },\r\n    formContainer: {\r\n        flexDirection: 'row',\r\n        height: 80,\r\n        marginTop: 40,\r\n        marginBottom: 20,\r\n        flex: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        paddingLeft: 16,\r\n        flex: 1,\r\n        marginRight: 5\r\n    },\r\n    button: {\r\n        height: 47,\r\n        borderRadius: 5,\r\n        backgroundColor: '#788eec',\r\n        width: 80,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16\r\n    },\r\n    listContainer: {\r\n        marginTop: 20,\r\n        padding: 20,\r\n    },\r\n    entityContainer: {\r\n        marginTop: 16,\r\n        borderBottomColor: '#cccccc',\r\n        borderBottomWidth: 1,\r\n        paddingBottom: 16\r\n    },\r\n    entityText: {\r\n        fontSize: 20,\r\n        color: '#333333'\r\n    }\r\n})\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FlatList, Keyboard, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\nimport { ContactButton } from '../../components';\r\n\r\nexport default function InfoScreen({route}) {\r\n    const [user, setUser] = useState({})\r\n    const [fields, setFields] = useState([])\r\n\r\n    const candidateFieldRef = firebase.firestore().collection('candidateFields')\r\n\r\n    const userRef = firebase.firestore().collection('users')\r\n    const userId = route.params.userId\r\n\r\n    const renderField = (field, data) => {\r\n        console.log(\"Data: \", data)\r\n        return (\r\n            <View key={field.name}>\r\n                <Text>{field.displayName}</Text>\r\n                <Text>{data || ''}</Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        userRef\r\n            .doc(userId)\r\n            .get()\r\n            .then( (doc) => setUser(doc.data()) )\r\n            .catch( (error) => alert(error) )\r\n\r\n        candidateFieldRef\r\n            .get()\r\n            .then( (snapshot) => {console.log(snapshot.docs); setFields(snapshot.docs.map(doc => doc.data()))} )\r\n            .catch( (error) => alert(error) )\r\n    }, [])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.formContainer}>\r\n                {fields.map( (field, i) => renderField(field, user[field.name]))}\r\n            </View>\r\n            <ContactButton email={user.email} />\r\n        </View>\r\n    )\r\n}\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center'\r\n    },\r\n    formContainer: {\r\n        flexDirection: 'row',\r\n        height: 80,\r\n        marginTop: 40,\r\n        marginBottom: 20,\r\n        flex: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        paddingLeft: 16,\r\n        flex: 1,\r\n        marginRight: 5\r\n    },\r\n    button: {\r\n        height: 47,\r\n        borderRadius: 5,\r\n        backgroundColor: '#788eec',\r\n        width: 80,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16\r\n    },\r\n    listContainer: {\r\n        marginTop: 20,\r\n        padding: 20,\r\n    },\r\n    entityContainer: {\r\n        marginTop: 16,\r\n        borderBottomColor: '#cccccc',\r\n        borderBottomWidth: 1,\r\n        paddingBottom: 16\r\n    },\r\n    entityText: {\r\n        fontSize: 20,\r\n        color: '#333333'\r\n    }\r\n})\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, FlatList, Keyboard, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function ProfileScreen({navigation}) {\r\n    const [user, setUser] = useState({})\r\n    const [oldUser, setOldUser] = useState({})\r\n    const [fieldInfos, setFieldInfos] = useState([])\r\n\r\n    const candidateFieldRef = firebase.firestore().collection('candidateFields')\r\n\r\n    const userRef = firebase.firestore().collection('users')\r\n    const userID = firebase.auth().currentUser.uid\r\n\r\n    const renderField = (field) => {\r\n        return (\r\n            <View key={field.name}>\r\n                <Text>{field.displayName}</Text>\r\n                <TextInput value={user[field.name] || ''} onChangeText={(text) => {\r\n                    const newUser = {...user}\r\n                    newUser[field.name] = text\r\n                    setUser(newUser)\r\n                }}/>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        userRef\r\n            .doc(user.id)\r\n            .set(user)\r\n            .then(() => alert('Updated!'))\r\n            .catch((error) => alert(error))\r\n            .then(() => setOldUser({...user}))\r\n    }\r\n\r\n    const discardChanges = () => {\r\n        setUser({...oldUser})\r\n    }\r\n\r\n    useEffect(() => {\r\n        userRef\r\n            .doc(userID)\r\n            .get()\r\n            .then( (doc) => {\r\n                const retrievedUser = doc.data()\r\n                setUser(retrievedUser)\r\n                setOldUser({...retrievedUser})\r\n             } )\r\n            .catch( (error) => alert(error) )\r\n\r\n        candidateFieldRef\r\n            .get()\r\n            .then( (snapshot) => {console.log(snapshot.docs); setFieldInfos(snapshot.docs.map(doc => doc.data()))} )\r\n            .catch( (error) => alert(error) )\r\n    }, [])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.formContainer}>\r\n                {fieldInfos.map( (field, i) => renderField(field))}\r\n            </View>\r\n            <Button title=\"Save\" onPress={saveChanges}/>\r\n            <Button title=\"Discard\" onPress={discardChanges}/>\r\n            <Button title=\"Candidates\" onPress={() => navigation.navigate(\"CandidateList\")} />\r\n        </View>\r\n    )\r\n}\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#788eec',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize: 16,\r\n        color: '#2e2e2d'\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function RegistrationScreen({navigation}) {\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const onFooterLinkPress = () => {\r\n        navigation.navigate('Login')\r\n    }\r\n\r\n    const onRegisterPress = () => {\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n    \r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const data = {\r\n                    id: uid,\r\n                    email,\r\n                    fullName,\r\n                };\r\n                const usersRef = firebase.firestore().collection('users')\r\n                usersRef\r\n                    .doc(uid)\r\n                    .set(data)\r\n                    .then(() => {\r\n                        navigation.navigate('Home', {user: data})\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                alert(error)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <KeyboardAwareScrollView\r\n                style={{ flex: 1, width: '100%' }}\r\n                keyboardShouldPersistTaps=\"always\">\r\n                <Image\r\n                    style={styles.logo}\r\n                    source={require('../../../assets/icon.png')}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Full Name'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setFullName(text)}\r\n                    value={fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='E-mail'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    value={email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    onChangeText={(text) => setConfirmPassword(text)}\r\n                    value={confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => onRegisterPress()}>\r\n                    <Text style={styles.buttonTitle}>Create account</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.footerView}>\r\n                    <Text style={styles.footerText}>Already got an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Log in</Text></Text>\r\n                </View>\r\n            </KeyboardAwareScrollView>\r\n        </View>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Pressable, Text, TouchableOpacity, View } from 'react-native'\r\nimport styles from './styles';\r\n\r\nconst WelcomeScreen = ({navigation}) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.formContainer}>\r\n                <Button onPress={() => navigation.navigate('CandidateList')} title=\"View candidates\" />\r\n                <Button onPress={() => navigation.navigate('Login')} title=\"Sign In / Sign Up\" />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen"],"sourceRoot":""}